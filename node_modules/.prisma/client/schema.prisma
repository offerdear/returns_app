// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model ReturnRequest {
  id           Int       @id @default(autoincrement())
  customerId   String
  orderId      String
  reason       String
  status       String // e.g., "pending", "approved", "rejected"
  refunded     Boolean   @default(false)
  refundAmount Float? // Total refund amount (excluding shipping)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  receipts     Receipt[]
  refunds      Refund[]
}

model Receipt {
  id              Int           @id @default(autoincrement())
  returnRequestId Int
  fileUrl         String // URL or path to the uploaded receipt
  uploadedAt      DateTime      @default(now())
  refunded        Boolean       @default(false)
  refundAmount    Float? // Refund amount for this receipt
  returnRequest   ReturnRequest @relation(fields: [returnRequestId], references: [id])
}

model Refund {
  id              Int           @id @default(autoincrement())
  returnRequestId Int
  shopifyRefundId String // Shopify's refund ID
  amount          Float // Refund amount
  currency        String        @default("USD")
  status          String // "pending", "success", "failed"
  processedAt     DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  returnRequest   ReturnRequest @relation(fields: [returnRequestId], references: [id])
}

model Product {
  id          Int      @id @default(autoincrement())
  shopifyId   String   @unique
  title       String
  description String?
  price       Float?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
